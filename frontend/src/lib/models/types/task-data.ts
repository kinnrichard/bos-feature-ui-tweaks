/**
 * TaskData - TypeScript interface for tasks table
 * * Relationships (loaded via includes()):
 * - job: belongs_to Job
 * - assignedTo: belongs_to User
 * - parent: belongs_to Task
 * - repositionedAfter: belongs_to Task
 * - client: has_one Client
 * - nextRepositionedTask: has_one Task
 * - notes: has_many Note
 * - activityLogs: has_many ActivityLog
 * - subtasks: has_many Task
 * ⚠️  Do not edit this file manually - it will be regenerated
 * To customize: Modify Rails model or run: rails generate zero:active_models
 */

import type { BaseRecord } from '../base/types';
import type { JobData } from './job-data';
import type { UserData } from './user-data';
import type { ClientData } from './client-data';
import type { NoteData } from './note-data';
import type { ActivityLogData } from './activity-log-data';

/**
 * Complete Task record interface
 * Matches the database schema exactly with optional relationships
 */
export interface TaskData extends BaseRecord {
  id: string;
  title?: string;
  position: number;
  created_at: string | number;
  updated_at: string | number;
  subtasks_count?: number;
  reordered_at?: string | number;
  lock_version: number;
  applies_to_all_targets: boolean;
  job_id?: string;
  assigned_to_id?: string;
  parent_id?: string;
  discarded_at?: string | number;
  status: 'new_task' | 'in_progress' | 'paused' | 'successfully_completed' | 'cancelled';
  repositioned_after_id?: string;
  position_finalized: boolean;
  repositioned_to_top: boolean;
  job?: JobData; // belongs_to
  assignedTo?: UserData; // belongs_to
  parent?: TaskData; // belongs_to
  repositionedAfter?: TaskData; // belongs_to
  client?: ClientData; // has_one
  nextRepositionedTask?: TaskData; // has_one
  notes?: NoteData[]; // has_many
  activityLogs?: ActivityLogData[]; // has_many
  subtasks?: TaskData[]; // has_many
}

/**
 * Create Task data interface
 * Excludes auto-generated fields and relationships
 */
export type CreateTaskData = Omit<
  TaskData,
  'id',
  'created_at',
  'updated_at',
  'job',
  'assignedTo',
  'parent',
  'repositionedAfter',
  'client',
  'nextRepositionedTask',
  'notes',
  'activityLogs',
  'subtasks'
>;

/**
 * Update Task data interface
 * All fields optional except id, excludes relationships
 */
export type UpdateTaskData = Partial<
  Omit<
    TaskData,
    'id',
    'created_at',
    'updated_at',
    'job',
    'assignedTo',
    'parent',
    'repositionedAfter',
    'client',
    'nextRepositionedTask',
    'notes',
    'activityLogs',
    'subtasks'
  >
>;
