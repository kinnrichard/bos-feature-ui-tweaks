/**
 * ContactMethodData - TypeScript interface for contact_methods table
 * * Relationships (loaded via includes()):
 * - person: belongs_to Person
 * - frontConversations: has_many FrontConversation
 * - frontMessageRecipients: has_many FrontMessageRecipient
 * ⚠️  Do not edit this file manually - it will be regenerated
 * To customize: Modify Rails model or run: rails generate zero:active_models
 */

import type { BaseRecord } from '../base/types';
import type { PersonData } from './person-data';
import type { FrontConversationData } from './front-conversation-data';
import type { FrontMessageRecipientData } from './front-message-recipient-data';

/**
 * Complete ContactMethod record interface
 * Matches the database schema exactly with optional relationships
 */
export interface ContactMethodData extends BaseRecord {
  id: string;
  value?: string;
  formatted_value?: string;
  created_at: string | number;
  updated_at: string | number;
  person_id?: string;
  contact_type: 'phone' | 'email' | 'address';
  normalized_value: string;
  person?: PersonData; // belongs_to
  frontConversations?: FrontConversationData[]; // has_many
  frontMessageRecipients?: FrontMessageRecipientData[]; // has_many
}

/**
 * Create ContactMethod data interface
 * Excludes auto-generated fields and relationships
 */
export type CreateContactMethodData = Omit<
  ContactMethodData,
  'id',
  'created_at',
  'updated_at',
  'person',
  'frontConversations',
  'frontMessageRecipients'
>;

/**
 * Update ContactMethod data interface
 * All fields optional except id, excludes relationships
 */
export type UpdateContactMethodData = Partial<
  Omit<
    ContactMethodData,
    'id',
    'created_at',
    'updated_at',
    'person',
    'frontConversations',
    'frontMessageRecipients'
  >
>;
