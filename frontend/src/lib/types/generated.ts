// Generated TypeScript Types from Rails Schema
// DO NOT EDIT - This file is automatically generated

export interface ActivityLog {
  action?: string;
  loggable_type: string;
  metadata?: Record<string, unknown>;
  created_at: string;
  updated_at: string;
  id: string;
  user_id?: string;
  client_id?: string;
  job_id?: string;
  loggable_id?: string;
}


export interface ContactMethod {
  value?: string;
  formatted_value?: string;
  created_at: string;
  updated_at: string;
  id: string;
  person_id?: string;
  contact_type: string;
  normalized_value: string;
}


export interface Job {
  title?: string;
  created_at: string;
  updated_at: string;
  description?: string;
  lock_version: number;
  id: string;
  client_id?: string;
  due_at?: string;
  due_time_set: boolean;
  starts_at?: string;
  start_time_set: boolean;
  status: string;
  priority: string;
}


export interface Client {
  name?: string;
  created_at: string;
  updated_at: string;
  name_normalized?: string;
  id: string;
  client_type: string;
}


export interface Device {
  name?: string;
  model?: string;
  serial_number?: string;
  location?: string;
  notes?: string;
  created_at: string;
  updated_at: string;
  id: string;
  client_id?: string;
  person_id?: string;
}


export interface JobAssignment {
  created_at: string;
  updated_at: string;
  id: string;
  job_id?: string;
  user_id?: string;
}


export interface JobPerson {
  created_at: string;
  updated_at: string;
  id: string;
  job_id?: string;
  person_id?: string;
}


export interface PeopleGroup {
  id: string;
  name: string;
  is_department: boolean;
  client_id: string;
  created_at: string;
  updated_at: string;
}


export interface PeopleGroupMembership {
  id: string;
  person_id: string;
  people_group_id: string;
  created_at: string;
  updated_at: string;
}


export interface Note {
  notable_type: string;
  content?: string;
  created_at: string;
  updated_at: string;
  metadata?: Record<string, unknown>;
  id: string;
  user_id?: string;
  notable_id?: string;
}


export interface JobTarget {
  target_type: string;
  status?: string;
  instance_number: number;
  reason?: string;
  created_at: string;
  updated_at: string;
  id: string;
  job_id?: string;
  target_id?: string;
}


export interface FrontConversation {
  id: string;
  front_id: string;
  subject?: string;
  status?: string;
  status_category?: string;
  status_id?: string;
  is_private?: boolean;
  created_at_timestamp?: number;
  waiting_since_timestamp?: number;
  custom_fields?: Record<string, unknown>;
  metadata?: Record<string, unknown>;
  links?: Record<string, unknown>;
  scheduled_reminders?: Record<string, unknown>;
  api_links?: Record<string, unknown>;
  assignee_id?: string;
  recipient_contact_id?: string;
  created_at: string;
  updated_at: string;
  last_message_front_id?: string;
  recipient_handle?: string;
  recipient_role?: string;
}


export interface ScheduledDateTime {
  schedulable_type: string;
  scheduled_type: string;
  notes?: string;
  created_at: string;
  updated_at: string;
  id: string;
  schedulable_id?: string;
  scheduled_at?: string;
  scheduled_time_set: boolean;
}


export interface ScheduledDateTimeUser {
  created_at: string;
  updated_at: string;
  id: string;
  scheduled_date_time_id?: string;
  user_id?: string;
}


export interface Person {
  name?: string;
  created_at: string;
  updated_at: string;
  id: string;
  client_id?: string;
  name_preferred?: string;
  name_pronunciation_hint?: string;
  is_active?: boolean;
  title?: string;
}


export interface FrontContact {
  id: string;
  front_id?: string;
  name?: string;
  handle?: string;
  role?: string;
  handles?: Record<string, unknown>;
  api_links?: Record<string, unknown>;
  created_at: string;
  updated_at: string;
}


export interface Task {
  title?: string;
  position: number;
  created_at: string;
  updated_at: string;
  subtasks_count?: number;
  reordered_at?: string;
  lock_version: number;
  applies_to_all_targets: boolean;
  id: string;
  job_id?: string;
  assigned_to_id?: string;
  parent_id?: string;
  discarded_at?: string;
  status: string;
  repositioned_after_id?: string;
  position_finalized: boolean;
  repositioned_to_top: boolean;
}


export interface FrontInbox {
  id: string;
  front_id: string;
  name: string;
  inbox_type?: string;
  handle?: string;
  settings?: Record<string, unknown>;
  api_links?: Record<string, unknown>;
  created_at: string;
  updated_at: string;
}


export interface FrontTag {
  id: string;
  front_id: string;
  name: string;
  highlight?: string;
  description?: string;
  is_private?: boolean;
  is_visible_in_conversation_lists?: boolean;
  created_at_timestamp?: number;
  updated_at_timestamp?: number;
  parent_tag_id?: string;
  created_at: string;
  updated_at: string;
}


export interface FrontMessage {
  id: string;
  front_id: string;
  front_conversation_id: string;
  message_uid?: string;
  message_type?: string;
  is_inbound?: boolean;
  is_draft?: boolean;
  subject?: string;
  blurb?: string;
  body_html?: string;
  body_plain?: string;
  error_type?: string;
  draft_mode?: string;
  metadata?: Record<string, unknown>;
  api_links?: Record<string, unknown>;
  created_at_timestamp?: number;
  author_id?: string;
  created_at: string;
  updated_at: string;
  author_type?: string;
  author_handle?: string;
  author_name?: string;
}


export interface FrontAttachment {
  id: string;
  front_message_id: string;
  filename?: string;
  content_type?: string;
  url?: string;
  size?: number;
  metadata?: Record<string, unknown>;
  created_at: string;
  updated_at: string;
}


export interface User {
  name?: string;
  email?: string;
  created_at: string;
  updated_at: string;
  password_digest?: string;
  resort_tasks_on_status_change: boolean;
  id: string;
  role: string;
  short_name?: string;
}


export interface FrontConversationTag {
  id: string;
  front_conversation_id: string;
  front_tag_id: string;
  created_at: string;
  updated_at: string;
}


export interface FrontMessageRecipient {
  id: string;
  front_message_id: string;
  front_contact_id?: string;
  role: string;
  handle: string;
  name?: string;
  api_links?: Record<string, unknown>;
  created_at: string;
  updated_at: string;
}


export interface FrontConversationInbox {
  id: string;
  front_conversation_id: string;
  front_inbox_id: string;
  created_at: string;
  updated_at: string;
}


export interface ParsedEmail {
  id: string;
  parseable_type: string;
  parseable_id: string;
  plain_message?: string;
  plain_signature?: string;
  html_message?: string;
  html_signature?: string;
  parse_options?: string;
  parsed_at?: string;
  parser_version?: string;
  parse_errors?: string;
  content_hash?: string;
  created_at: string;
  updated_at: string;
}


export interface FrontSyncLog {
  id: string;
  resource_type: string;
  sync_type: string;
  status: string;
  started_at: string;
  completed_at?: string;
  duration_seconds?: number;
  records_synced?: number;
  records_created?: number;
  records_updated?: number;
  records_failed?: number;
  error_messages?: string;
  metadata?: Record<string, unknown>;
  created_at: string;
  updated_at: string;
}


export interface PeopleFrontConversation {
  id: string;
  person_id: string;
  front_conversation_id: string;
  created_at: string;
  updated_at: string;
}


export interface ClientsFrontConversation {
  id: string;
  client_id: string;
  front_conversation_id: string;
  created_at: string;
  updated_at: string;
}


export interface FrontTeammate {
  id: string;
  front_id: string;
  email?: string;
  username?: string;
  first_name?: string;
  last_name?: string;
  is_admin?: boolean;
  is_available?: boolean;
  is_blocked?: boolean;
  teammate_type?: string;
  custom_fields?: Record<string, unknown>;
  api_links?: Record<string, unknown>;
  created_at_timestamp?: number;
  updated_at_timestamp?: number;
  created_at: string;
  updated_at: string;
}


export interface FrontTicket {
  id: string;
  front_id?: string;
  ticket_id?: string;
  subject?: string;
  status?: string;
  status_category?: string;
  status_id?: string;
  created_at_timestamp?: number;
  updated_at_timestamp?: number;
  custom_fields?: Record<string, unknown>;
  metadata?: Record<string, unknown>;
  api_links?: Record<string, unknown>;
  created_at: string;
  updated_at: string;
}


export interface FrontConversationTicket {
  id: string;
  front_conversation_id: string;
  front_ticket_id: string;
  created_at: string;
  updated_at: string;
}


// Union types for easier usage
export type TableNames = 'activity_logs' | 'contact_methods' | 'jobs' | 'clients' | 'devices' | 'job_assignments' | 'job_people' | 'people_groups' | 'people_group_memberships' | 'notes' | 'job_targets' | 'front_conversations' | 'scheduled_date_times' | 'scheduled_date_time_users' | 'people' | 'front_contacts' | 'tasks' | 'front_inboxes' | 'front_tags' | 'front_messages' | 'front_attachments' | 'users' | 'front_conversation_tags' | 'front_message_recipients' | 'front_conversation_inboxes' | 'parsed_emails' | 'front_sync_logs' | 'people_front_conversations' | 'clients_front_conversations' | 'front_teammates' | 'front_tickets' | 'front_conversation_tickets';
export type ModelNames = 'activity_log' | 'contact_method' | 'job' | 'client' | 'device' | 'job_assignment' | 'job_person' | 'people_group' | 'people_group_membership' | 'note' | 'job_target' | 'front_conversation' | 'scheduled_date_time' | 'scheduled_date_time_user' | 'person' | 'front_contact' | 'task' | 'front_inbox' | 'front_tag' | 'front_message' | 'front_attachment' | 'user' | 'front_conversation_tag' | 'front_message_recipient' | 'front_conversation_inbox' | 'parsed_email' | 'front_sync_log' | 'people_front_conversation' | 'clients_front_conversation' | 'front_teammate' | 'front_ticket' | 'front_conversation_ticket';
